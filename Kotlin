class AlbumsActivity : AppCompatActivity() {
    private lateinit var recyclerView: RecyclerView
    private lateinit var albumAdapter: AlbumAdapter
    private lateinit var apiService: ApiService

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_albums)

        recyclerView = findViewById(R.id.recyclerView)
        recyclerView.layoutManager = LinearLayoutManager(this)
        albumAdapter = AlbumAdapter()
        recyclerView.adapter = albumAdapter

        apiService = ApiClient.createService(ApiService::class.java)

        fetchAlbums()
    }

    private fun fetchAlbums() {
        apiService.getAlbums().enqueue(object : Callback<AlbumsResponse> {
            override fun onResponse(call: Call<AlbumsResponse>, response: Response<AlbumsResponse>) {
                if (response.isSuccessful && response.body() != null) {
                    val albums = response.body()!!.albums
                    if (albums.isNotEmpty()) {
                        albumAdapter.setAlbums(albums)
                        albumAdapter.notifyDataSetChanged()
                    } else {
                        // Mostrar mensaje de que no hay Ã¡lbumes disponibles
                        showMessage("No albums available")
                    }
                } else {
                    // Manejar el error
                    Log.e("API Error", response.errorBody().toString())
                }
            }

            override fun onFailure(call: Call<AlbumsResponse>, t: Throwable) {
                // Manejar el error de red o cualquier otro error
                Log.e("API Failure", t.message.toString())
            }
        })
    }

    private fun showMessage(message: String) {
        Toast.makeText(this, message, Toast.LENGTH_LONG).show()
    }
}
